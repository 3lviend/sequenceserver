#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
require 'optparse'

# e.g:
# sequenceserver --config .sequenceserver.conf format_database
options = {}
begin
  # parse command line till first non-option, removing parsed options from ARGV
  OptionParser.new do |opts|
    opts.banner =<<BANNER

SUMMARY

  custom, local, BLAST server

USAGE

  sequenceserver [options] [subcommand] [subcommand's options]

  Example:

    # launch SequenceServer with the given config file
    $ sequenceserver --config ~/.sequenceserver.ants.conf

    # use the bundled database formatter utility to prepare databases for use
    # with SequenceServer
    $ sequenceserver format-databases

DESCRIPTION

  SequenceServer lets you rapidly set up a BLAST+ server with an intuitive user
  interface for use locally or over the web.

SUB-COMMANDS

  format-databases:
    prepare BLAST databases for use with SequenceServer

    Run '#{$0} format-databases -h' for help.

OPTIONS

BANNER
    opts.on('-p', '--port PORT', 'Port to run SequenceServer on') do |port|
      options['port'] = port
    end

    opts.on('-c', '--config CONFIG_FILE', 'Use the given configuration file') do |config_file|
      options['config_file'] = config_file
    end

    opts.on('-v', '--version', 'Print version number of SequenceServer that will be loaded.' ) do
      require 'sequenceserver/version'
      puts SequenceServer.version
      exit
    end
  end.order!

  require 'sequenceserver'

  # of the remaining items in ARGV, the first one must be a subcommand
  subcommand = ARGV.shift

  if subcommand
    # process subcommands now

    case subcommand
    when 'format-databases'
      SequenceServer.init2 options
      require 'sequenceserver/databaseformatter'
      exit
    else
      puts "invalid subcommand: #{subcommand}"
      puts "Run '#{$0} -h' for help with command line options."
      exit
    end
  end
rescue OptionParser::InvalidOption => e
  puts e
  puts "Run '#{$0} -h' for help with command line options."
  exit
end

# display name for tools like `ps`
$PROGRAM_NAME = 'sequenceserver'

SequenceServer.init options
SequenceServer.run
